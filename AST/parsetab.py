
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightEXPONENTDIVIDE EQUALS EXPONENT IDENTIFIER LPAREN MINUS NUMBER PLUS RPAREN TIMESexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENT expressionexpression : NUMBERexpression : LPAREN expression RPARENexpression : IDENTIFIER'
    
_lr_action_items = {'NUMBER':([0,3,5,6,7,8,9,],[2,2,2,2,2,2,2,]),'LPAREN':([0,3,5,6,7,8,9,],[3,3,3,3,3,3,3,]),'IDENTIFIER':([0,3,5,6,7,8,9,],[4,4,4,4,4,4,4,]),'$end':([1,2,4,11,12,13,14,15,16,],[0,-6,-8,-1,-2,-3,-4,-5,-7,]),'PLUS':([1,2,4,10,11,12,13,14,15,16,],[5,-6,-8,5,-1,-2,-3,-4,-5,-7,]),'MINUS':([1,2,4,10,11,12,13,14,15,16,],[6,-6,-8,6,-1,-2,-3,-4,-5,-7,]),'TIMES':([1,2,4,10,11,12,13,14,15,16,],[7,-6,-8,7,7,7,-3,-4,-5,-7,]),'DIVIDE':([1,2,4,10,11,12,13,14,15,16,],[8,-6,-8,8,8,8,-3,-4,-5,-7,]),'EXPONENT':([1,2,4,10,11,12,13,14,15,16,],[9,-6,-8,9,9,9,9,9,9,-7,]),'RPAREN':([2,4,10,11,12,13,14,15,16,],[-6,-8,16,-1,-2,-3,-4,-5,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,5,6,7,8,9,],[1,10,11,12,13,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','new_parser.py',8),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','new_parser.py',9),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','new_parser.py',10),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','new_parser.py',11),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','new_parser.py',12),
  ('expression -> NUMBER','expression',1,'p_expression_number','new_parser.py',16),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','new_parser.py',20),
  ('expression -> IDENTIFIER','expression',1,'p_expression_var','new_parser.py',24),
]
